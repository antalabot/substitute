@model Substitute.Business.DataStructs.Role.RoleResultsModel
@using Substitute.Webpage.Extensions
@{
    ViewData["Title"] = "Roles access levels";
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("Index", "Role", FormMethod.Get, new { @class = "row" }))
{
<div class="col-md-6">
    <div class="input-group">
        <span class="input-group-addon" id="basic-addon1">Name:</span>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name", ariaDescribedby = "basic-addon1" })
    </div>
</div>
<div class="col-md-5">
    <div class="input-group">
        <span class="input-group-addon" id="basic-addon1">Access level:</span>
        @Html.DropDownListFor(m => m.AccessLevel, Model.AccessLevels.ToOptionalSelectList(), new { @class = "form-control" })
    </div>
</div>
<div class="col-md-1">
    <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
</div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Role name
            </th>
            <th>
                Current access level
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccessLevel)
                </td>
                <td>
                    @using (Html.BeginForm("SetAccessLevel", "Role", FormMethod.Post, new { @class = "input-group" }))
                    {
                        @Html.DropDownList("AccessLevel", Model.AccessLevels.ToSelectList((byte)item.AccessLevel), new { @class = "form-control" })
                        <span class="input-group-btn"><button type="submit" class="btn btn-default"><i class="fas fa-save"></i></button></span>
                        @Html.Hidden("Id", item.Id)
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Pagination">
    <ul class="pagination">
        @if (Model.Page == 1)
        {
            <li class="disabled">
                <span>
                    <span aria-hidden="true">&laquo;</span>
                </span>
            </li>
        }
        else
        {
            <li>
                <a href="@Url.Action("Index", "Role", Model.ChangePage(Model.Page - 1))" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.Pages; i++)
        {
            if (i == Model.Page)
            {
                <li class="active">
                    <span>@i <span class="sr-only">(current)</span></span>
                </li>
            }
            else
            {
                <li><a href="@Url.Action("Index", "Role", Model.ChangePage(i))">@i</a></li>
            }
        }
        @if (Model.Page == Model.Pages)
        {
            <li class="disabled">
                <span>
                    <span aria-hidden="true">&raquo;</span>
                </span>
            </li>
        }
        else
        {
            <li>
                <a href="@Url.Action("Index", "Role", Model.ChangePage(Model.Page + 1))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>