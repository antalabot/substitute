@model Substitute.Business.DataStructs.ImageResponse.ImageResponseResultsModel
@using Microsoft.AspNetCore.Http.Extensions
@using Substitute.Domain.Enums
@using Substitute.Webpage.Extensions
@{
    ViewData["Title"] = "Image responses list";
    bool canEdit = new EAccessLevel[] { EAccessLevel.Administrator, EAccessLevel.Moderator, EAccessLevel.Owner }.Contains(Html.GetGuildData().AccessLevel);
    string currentUrl = Context?.Request?.GetDisplayUrl();
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("Index", "ImageResponse", FormMethod.Get))
{
    <div class="input-group">
        <span class="input-group-addon" id="basic-addon1">Command:</span>
        @Html.TextBoxFor(m => m.Command, new { @class = "form-control", placeholder = "Command", ariaDescribedby = "basic-addon1" })
        <div class="input-group-btn">
            <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
        </div>
    </div>
}

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                Command
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    <a href="@Url.Action("Image", "ImageResponse", new { id = item.Id })">@Html.DisplayFor(modelItem => item.Command)</a>
                </td>
                <td>
                    <a href="@Url.Action("Details", new { id = item.Id, returnUrl = currentUrl })" class="btn btn-info btn-sm inline-block"><i class="fas fa-info"></i></a>
                    @if (canEdit)
                    {
                        using (Html.BeginForm("Delete", "ImageResponse", FormMethod.Post, new { @class = "input-group inline-block" }))
                        {
                            <button type="submit" class="btn btn-danger btn-sm"><i class="fas fa-trash-alt"></i></button>
                            @Html.Hidden("id", item.Id)
                            @Html.Hidden("returnUrl", currentUrl)
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<partial name="Paging" model="Model" />

@if (canEdit)
{
    <fieldset>
        <legend>Add new image response</legend>
        @using (Html.BeginForm("Create", "ImageResponse", FormMethod.Post, new { @class = "row", enctype = "multipart/form-data" }))
        {
            @Html.Hidden("ReturnUrl", currentUrl)
            <div class="col-md-5">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon2">Command:</span>
                    @Html.TextBox("Command", null, new { @class = "form-control", placeholder = "Command", ariaDescribedby = "basic-addon2" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon3">File:</span>
                    @Html.TextBox("Command", null, new { @class = "form-control", type = "file", placeholder = "File", ariaDescribedby = "basic-addon3" })
                </div>
            </div>
            <div class="col-md-1">
                <button type="submit" class="btn btn-success"><i class="fas fa-plus"></i></button>
            </div>
        }
    </fieldset>
}